# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	};
# Function
snippet fun
	function ${1:function_name} (${2:argument}) {
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1}) {
		${2}
	}
# if
snippet if
	if (${1:true}) {${2}};
# if ... else
snippet ife
	if (${1:true}) {${2}}
	else{${3}};
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:expression}) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${3:i} = 0, ${4:c} = ${1:list}.length; $3 < ${4:c}; $3${5:++}) {
		var ${2:item} = $1[$3];
	}
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10};
# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet gett
	getElementBy${1:Id}('${2}')${3}

#Console Log
snippet cl
	console.log(${1:Message});
#debugger
snippet deb
	debugger;
#LowPro Widget
snippet ux
	(function($) {
		$.ux.behavior("${1:WidgetName}", {
			initialize: function() {
			}
		}, {
		});
	})(jQuery);

#jQuery Closure
snippet jcl
	(function($) {
		${1}
	})(jQuery);
#PhoneGap Debug Log
snippet dl
	debug.log(${1:Message});
#QUnit Test
snippet test
	test('${1:Message}', function() {
	    ${2:Test}
	});
snippet atest
	asyncTest('${1:Name}', function() {
		${2:Test}
	});

snippet af
	function(${1:Arguments}) {
		${2:/* code */}
	});

snippet of
	${1:Method}: function(${2:Arguments}) {
		${3:/* code */}
	},
